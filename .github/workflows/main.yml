# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v1

      - name: Create env file
        env:
          API_KEY: ${{ secrets.API_KEY }}
          PORT: ${{ secrets.PORT }}
          NODE_secrets: ${{ secrets.NODE_secrets }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CLIENT_CALLBACK: ${{ secrets.CLIENT_CALLBACK }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

        run: |
          touch .env
          echo API_KEY="$env.API_KEY" >> .env
          echo PORT="$env.PORT" >> .env
          echo NODE_ENV="$env.NODE_ENV" >> .env
          echo DATABASE_HOST="$env.DATABASE_HOST" >> .env
          echo DATABASE_PORT="$env.DATABASE_PORT" >> .env
          echo DATABASE_USERNAME="$env.DATABASE_USERNAME" >> .env
          echo DATABASE_PASSWORD="$env.DATABASE_PASSWORD" >> .env
          echo DATABASE_NAME="$env.DATABASE_NAME" >> .env
          echo CLIENT_ID="$env.CLIENT_ID" >> .env
          echo CLIENT_SECRET="$env.CLIENT_SECRET" >> .env
          echo CLIENT_CALLBACK="$env.CLIENT_CALLBACK" >> .env
          echo JWT_SECRET="$env.JWT_SECRET" >> .env
          cat .env | head -n 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: yarn install
        env:
          CI: true

      - name: Run Build
        run: yarn build
      - name: build file upload to ec2 
        uses: garygrossgarten/github-action-scp@release
        with:
            local: ./dist
            remote: /home/yurlee/code/42s_checkin_server/dist/
            host: ${{ secrets.HOST }}
            username: ${{ secrets.SSH_USER }}
            privateKey: ${{ secrets.SSH_KEY }}
            recursive: true
      - name: ec2 update
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.SSH_USER }}
           key: ${{ secrets.SSH_KEY }}
           script: pm2 start ./code/42s_checkin_server/dist/index.js --name server
